/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package avafinallpii;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Júlia Schwalm Gomes
 */
public class FastFood extends javax.swing.JFrame {

    File arquivo = new File("estoque.txt");
    File arquivo2 = new File("vendasMes.txt");
    File arquivo3 = new File("comprasMes.txt");
    //variaveis para quantidade de cada coisa
    int quantidadePao = 0, quantidadeCarne = 0, quantidadeQueijo = 0, quantidadeRefri = 0, quantidadeBatata = 0,
            //variaveis para controle do estoque
            estoquePao = 0, estoqueCarne = 0, estoqueQueijo = 0, estoqueRefri = 0, estoqueBatata = 0,
            //variaveis para venda para clientes
            hamburguer = 0, refri = 0, batatas = 0;
    //variaveis para todas as somas necessarias
    double somaProdutos = 0, somaCompras = 0, somaVendasDiarias = 0, somaComprasMes = 0;
    ArrayList<Double> vendasDiarias;
    ArrayList<Double> compras;
    ArrayList<Double> vendasMes;

    public FastFood() {
        initComponents();
        vendasDiarias = new ArrayList();
        compras = new ArrayList();
        vendasMes = new ArrayList();
    }

    public void calculaProdutos() {
        double calculoHam = 0, calculoBat = 0, calculoRefri = 0;
        painelClienteCerto.setText(" ");
        painelClienteCerto.setText("Seus produtos: \n");
        //aparece para o cliente no painel
        if (hamburguer > 0) {
            calculoHam = (hamburguer * 15.00);
            painelClienteCerto.append("Hamburguer  R$15,00 x " + hamburguer + "=  " + calculoHam + '\n');
        }

        if (batatas > 0) {
            calculoBat = (batatas * 8.00);
            painelClienteCerto.append("Batata Frita  R$8,00 x " + batatas + "=  " + calculoBat + '\n');
        }

        if (refri > 0) {
            calculoRefri = (refri * 7.00);
            painelClienteCerto.append("Refrigerante  R$7,00 x " + refri + "=  " + calculoRefri + '\n');
        }
        //soma as compras do cliente
        somaProdutos = calculoBat + calculoHam + calculoRefri;
        tfPedido.setText(" " + somaProdutos);
    }

    public void comprasEstoque() {
        double calculoPao = 0, calculoCarne = 0, calculoQueijo = 0, calculoRefri = 0, calculoBatatas = 0;

        painelAddprod.setText(" ");
        painelAddprod.setText("Produtos selecionados para compra:\n");
        //mostra no painel funcionario
        //as compras para que seja adicionado em estoque
        if (quantidadePao > 0) {
            //soma o valor gasto em pão
            calculoPao = (quantidadePao * 2.00);
            painelAddprod.append("Pão  R$2,00 x " + quantidadePao + "=  " + calculoPao + '\n');
        }
        if (quantidadeCarne > 0) {
            calculoCarne = (quantidadeCarne * 4.00);
            painelAddprod.append("Blend de carne  R$4,00 x " + quantidadeCarne + "=  " + calculoCarne + '\n');
        }
        if (quantidadeQueijo > 0) {
            calculoQueijo = (quantidadeQueijo * 1.00);
            painelAddprod.append("Queijo  R$1,00 x " + quantidadeQueijo + "=  " + calculoQueijo + '\n');
        }
        if (quantidadeRefri > 0) {
            calculoRefri = (quantidadeRefri * 3.00);
            painelAddprod.append("Refri  R$3,00 x " + quantidadeRefri + "=  " + calculoRefri + '\n');
        }
        if (quantidadeBatata > 0) {
            calculoBatatas = (quantidadeBatata * 3.00);
            painelAddprod.append("Batatas  R$3,00 x " + quantidadeBatata + "=  " + calculoBatatas + '\n');
        }
        //calcula o valor das compras e vai adicionando 
        somaCompras = calculoBatatas + calculoCarne + calculoPao + calculoQueijo + calculoRefri;
        tfTotalCompra.setText(" " + somaCompras);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        spRefri = new javax.swing.JSpinner();
        spHam = new javax.swing.JSpinner();
        spBatata = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        tfPedido = new javax.swing.JTextField();
        btConfClie = new javax.swing.JButton();
        btCancClien = new javax.swing.JButton();
        painelCliente = new javax.swing.JScrollPane();
        painelClienteCerto = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        btDimBatat = new javax.swing.JButton();
        btAddPao = new javax.swing.JButton();
        btAddCarne = new javax.swing.JButton();
        btAddQueijo = new javax.swing.JButton();
        btAddRefri = new javax.swing.JButton();
        btAddBatata = new javax.swing.JButton();
        btDimPao = new javax.swing.JButton();
        btDimCarne = new javax.swing.JButton();
        btDimQueijo = new javax.swing.JButton();
        btDimRefri = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        tfTotalCompra = new javax.swing.JTextField();
        btConfEstoque = new javax.swing.JButton();
        btCancEstoque = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        painelAddprod = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        btVerEstoque = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelEstoque = new javax.swing.JTextArea();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        btFinalDia = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        painelresumoDia = new javax.swing.JScrollPane();
        painelResumoDia = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        btFinalMes = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        painelResumoMes = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hamburgueria");
        setBackground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1350, 700));
        setMinimumSize(new java.awt.Dimension(1350, 700));
        setPreferredSize(new java.awt.Dimension(1350, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1350, 700));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 580));
        jPanel1.setLayout(null);

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Total do pedido");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 320, 216, 42);

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Selecione seu pedido:");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 20, 364, 42);

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hamburguer");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(130, 210, 140, 42);

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Batata Frita");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 220, 120, 42);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("R$7,00");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel8);
        jLabel8.setBounds(290, 250, 60, 20);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("R$15,00");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel9);
        jLabel9.setBounds(140, 240, 60, 21);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("R$8,00");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 250, 60, 20);

        spRefri.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        spRefri.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        spRefri.setBorder(null);
        spRefri.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spRefriStateChanged(evt);
            }
        });
        jPanel1.add(spRefri);
        spRefri.setBounds(350, 260, 60, 30);

        spHam.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        spHam.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        spHam.setBorder(null);
        spHam.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spHamStateChanged(evt);
            }
        });
        jPanel1.add(spHam);
        spHam.setBounds(200, 250, 60, 30);

        spBatata.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        spBatata.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        spBatata.setBorder(null);
        spBatata.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spBatataStateChanged(evt);
            }
        });
        jPanel1.add(spBatata);
        spBatata.setBounds(70, 260, 60, 30);

        jLabel11.setBackground(new java.awt.Color(204, 204, 204));
        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Refrigerante");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(270, 220, 130, 42);

        tfPedido.setEditable(false);
        tfPedido.setBackground(new java.awt.Color(204, 204, 204));
        tfPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(tfPedido);
        tfPedido.setBounds(210, 320, 140, 40);

        btConfClie.setBackground(new java.awt.Color(0, 204, 51));
        btConfClie.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btConfClie.setText("Confirmar");
        btConfClie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfClieActionPerformed(evt);
            }
        });
        jPanel1.add(btConfClie);
        btConfClie.setBounds(220, 520, 130, 40);

        btCancClien.setBackground(new java.awt.Color(255, 51, 51));
        btCancClien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btCancClien.setText("Cancelar");
        btCancClien.setBorder(null);
        btCancClien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancClienActionPerformed(evt);
            }
        });
        jPanel1.add(btCancClien);
        btCancClien.setBounds(50, 520, 130, 40);

        painelClienteCerto.setEditable(false);
        painelClienteCerto.setBackground(new java.awt.Color(204, 204, 204));
        painelClienteCerto.setColumns(20);
        painelClienteCerto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        painelClienteCerto.setRows(5);
        painelCliente.setViewportView(painelClienteCerto);

        jPanel1.add(painelCliente);
        painelCliente.setBounds(50, 370, 300, 140);

        jLabel27.setIcon(new javax.swing.ImageIcon("C:\\Users\\Júlia Schwalm Gomes.LAPTOP-CQD4T55R\\Desktop\\agr.jpg")); // NOI18N
        jLabel27.setText("jLabel27");
        jLabel27.setMaximumSize(new java.awt.Dimension(50, 50));
        jLabel27.setMinimumSize(new java.awt.Dimension(50, 50));
        jLabel27.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel1.add(jLabel27);
        jLabel27.setBounds(110, 70, 190, 130);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 70, 420, 590);

        jTabbedPane1.setBackground(new java.awt.Color(102, 102, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));
        jPanel2.setLayout(null);

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Produtos para comprar:");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(10, 10, 364, 42);

        jLabel13.setBackground(new java.awt.Color(204, 204, 204));
        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Pão");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(120, 90, 60, 20);

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Queijo");
        jPanel2.add(jLabel14);
        jLabel14.setBounds(120, 180, 70, 30);

        jLabel15.setBackground(new java.awt.Color(204, 204, 204));
        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Refrigerante");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(60, 230, 130, 30);

        jLabel16.setBackground(new java.awt.Color(204, 204, 204));
        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Batatas");
        jPanel2.add(jLabel16);
        jLabel16.setBounds(40, 280, 216, 30);

        jLabel17.setBackground(new java.awt.Color(204, 204, 204));
        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Blend de carne");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(0, 140, 216, 20);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("R$3,00/un");
        jLabel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel18);
        jLabel18.setBounds(120, 310, 70, 21);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("R$2,00/un");
        jLabel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel19);
        jLabel19.setBounds(120, 110, 70, 21);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("R$1,00/un");
        jLabel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel20);
        jLabel20.setBounds(120, 210, 70, 21);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("R$4,00/un");
        jLabel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel21);
        jLabel21.setBounds(120, 160, 70, 17);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("R$3,00/un");
        jLabel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel22);
        jLabel22.setBounds(120, 260, 70, 21);

        btDimBatat.setBackground(new java.awt.Color(255, 102, 102));
        btDimBatat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btDimBatat.setText("-");
        btDimBatat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDimBatatActionPerformed(evt);
            }
        });
        jPanel2.add(btDimBatat);
        btDimBatat.setBounds(270, 290, 50, 40);

        btAddPao.setBackground(new java.awt.Color(204, 255, 153));
        btAddPao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAddPao.setText("+");
        btAddPao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddPaoActionPerformed(evt);
            }
        });
        jPanel2.add(btAddPao);
        btAddPao.setBounds(200, 90, 50, 40);

        btAddCarne.setBackground(new java.awt.Color(204, 255, 153));
        btAddCarne.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAddCarne.setText("+");
        btAddCarne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddCarneActionPerformed(evt);
            }
        });
        jPanel2.add(btAddCarne);
        btAddCarne.setBounds(200, 140, 50, 40);

        btAddQueijo.setBackground(new java.awt.Color(204, 255, 153));
        btAddQueijo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAddQueijo.setText("+");
        btAddQueijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddQueijoActionPerformed(evt);
            }
        });
        jPanel2.add(btAddQueijo);
        btAddQueijo.setBounds(200, 190, 50, 40);

        btAddRefri.setBackground(new java.awt.Color(204, 255, 153));
        btAddRefri.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAddRefri.setText("+");
        btAddRefri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddRefriActionPerformed(evt);
            }
        });
        jPanel2.add(btAddRefri);
        btAddRefri.setBounds(200, 240, 50, 40);

        btAddBatata.setBackground(new java.awt.Color(204, 255, 153));
        btAddBatata.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btAddBatata.setText("+");
        btAddBatata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddBatataActionPerformed(evt);
            }
        });
        jPanel2.add(btAddBatata);
        btAddBatata.setBounds(200, 290, 50, 40);

        btDimPao.setBackground(new java.awt.Color(255, 102, 102));
        btDimPao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btDimPao.setText("-");
        btDimPao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDimPaoActionPerformed(evt);
            }
        });
        jPanel2.add(btDimPao);
        btDimPao.setBounds(270, 90, 50, 40);

        btDimCarne.setBackground(new java.awt.Color(255, 102, 102));
        btDimCarne.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btDimCarne.setText("-");
        btDimCarne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDimCarneActionPerformed(evt);
            }
        });
        jPanel2.add(btDimCarne);
        btDimCarne.setBounds(270, 140, 50, 40);

        btDimQueijo.setBackground(new java.awt.Color(255, 102, 102));
        btDimQueijo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btDimQueijo.setText("-");
        btDimQueijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDimQueijoActionPerformed(evt);
            }
        });
        jPanel2.add(btDimQueijo);
        btDimQueijo.setBounds(270, 190, 50, 40);

        btDimRefri.setBackground(new java.awt.Color(255, 102, 102));
        btDimRefri.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btDimRefri.setText("-");
        btDimRefri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDimRefriActionPerformed(evt);
            }
        });
        jPanel2.add(btDimRefri);
        btDimRefri.setBounds(270, 240, 50, 40);

        jLabel23.setBackground(new java.awt.Color(204, 204, 204));
        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Total da compra");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(210, 340, 216, 42);

        tfTotalCompra.setEditable(false);
        tfTotalCompra.setBackground(new java.awt.Color(204, 204, 204));
        tfTotalCompra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel2.add(tfTotalCompra);
        tfTotalCompra.setBounds(250, 380, 130, 40);

        btConfEstoque.setBackground(new java.awt.Color(0, 255, 0));
        btConfEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btConfEstoque.setText("Confirmar");
        btConfEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfEstoqueActionPerformed(evt);
            }
        });
        jPanel2.add(btConfEstoque);
        btConfEstoque.setBounds(250, 430, 130, 40);

        btCancEstoque.setBackground(new java.awt.Color(255, 0, 0));
        btCancEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btCancEstoque.setText("Cancelar");
        btCancEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancEstoqueActionPerformed(evt);
            }
        });
        jPanel2.add(btCancEstoque);
        btCancEstoque.setBounds(250, 480, 130, 40);

        painelAddprod.setEditable(false);
        painelAddprod.setBackground(new java.awt.Color(204, 204, 204));
        painelAddprod.setColumns(20);
        painelAddprod.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        painelAddprod.setRows(5);
        jScrollPane1.setViewportView(painelAddprod);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(30, 350, 200, 190);

        jTabbedPane1.addTab("ADICIONAR PRODUTOS", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));
        jPanel3.setLayout(null);

        btVerEstoque.setBackground(new java.awt.Color(153, 153, 153));
        btVerEstoque.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btVerEstoque.setText("Ver estoque");
        btVerEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerEstoqueActionPerformed(evt);
            }
        });
        jPanel3.add(btVerEstoque);
        btVerEstoque.setBounds(80, 40, 250, 40);

        painelEstoque.setEditable(false);
        painelEstoque.setBackground(new java.awt.Color(204, 204, 204));
        painelEstoque.setColumns(20);
        painelEstoque.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        painelEstoque.setRows(5);
        jScrollPane2.setViewportView(painelEstoque);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(30, 110, 360, 430);

        jTabbedPane1.addTab("ESTOQUE", jPanel3);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(460, 70, 430, 590);

        jTabbedPane2.setBackground(new java.awt.Color(255, 153, 153));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));
        jPanel4.setLayout(null);

        btFinalDia.setBackground(new java.awt.Color(153, 153, 153));
        btFinalDia.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btFinalDia.setText("Finalizar dia");
        btFinalDia.setBorder(new javax.swing.border.MatteBorder(null));
        btFinalDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalDiaActionPerformed(evt);
            }
        });
        jPanel4.add(btFinalDia);
        btFinalDia.setBounds(40, 10, 320, 40);

        jLabel24.setBackground(new java.awt.Color(204, 204, 204));
        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Resumo do dia:");
        jPanel4.add(jLabel24);
        jLabel24.setBounds(10, 50, 364, 42);

        painelResumoDia.setEditable(false);
        painelResumoDia.setBackground(new java.awt.Color(204, 204, 204));
        painelResumoDia.setColumns(20);
        painelResumoDia.setRows(5);
        painelresumoDia.setViewportView(painelResumoDia);

        jPanel4.add(painelresumoDia);
        painelresumoDia.setBounds(20, 90, 360, 450);

        jTabbedPane2.addTab("DIARIO", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 102));
        jPanel5.setLayout(null);

        btFinalMes.setBackground(new java.awt.Color(153, 153, 153));
        btFinalMes.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btFinalMes.setText("Finalizar mês");
        btFinalMes.setBorder(new javax.swing.border.MatteBorder(null));
        btFinalMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalMesActionPerformed(evt);
            }
        });
        jPanel5.add(btFinalMes);
        btFinalMes.setBounds(30, 10, 340, 40);

        jLabel25.setBackground(new java.awt.Color(204, 204, 204));
        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Resumo do mês:");
        jPanel5.add(jLabel25);
        jLabel25.setBounds(10, 50, 364, 42);

        painelResumoMes.setEditable(false);
        painelResumoMes.setBackground(new java.awt.Color(204, 204, 204));
        painelResumoMes.setColumns(20);
        painelResumoMes.setRows(5);
        jScrollPane3.setViewportView(painelResumoMes);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(30, 90, 340, 440);

        jTabbedPane2.addTab("MENSAL", jPanel5);

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(914, 70, 410, 590);

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Administração:");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(960, 20, 301, 41);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cliente:");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setMaximumSize(new java.awt.Dimension(150, 33));
        jLabel2.setMinimumSize(new java.awt.Dimension(150, 33));
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 33));
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 20, 301, 40);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Funcionários:");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.setMaximumSize(new java.awt.Dimension(150, 33));
        jLabel3.setMinimumSize(new java.awt.Dimension(150, 33));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 33));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(520, 20, 301, 41);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConfClieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfClieActionPerformed
        //se a soma é maior que zero significa que o cliente comprou algo
        if (somaProdutos > 0) {
            vendasDiarias.add(somaProdutos);
            somaProdutos = 0;
        }
        //diminiu do estoque o que o cliente comprou dentro do arquivo txt
        try {
            FileWriter ArquivoDeEscrita;
            ArquivoDeEscrita = new FileWriter(arquivo);
            BufferedWriter Escritor = new BufferedWriter(ArquivoDeEscrita);
            //diminiu a batata
            estoqueBatata = estoqueBatata - batatas;
            Escritor.write(String.valueOf(estoqueBatata));
            Escritor.newLine();
            //diminui a carne
            estoqueCarne = estoqueCarne - hamburguer;
            Escritor.write(String.valueOf(estoqueCarne));
            Escritor.newLine();
            //diminiu o pao 
            estoquePao = estoquePao - hamburguer;
            Escritor.write(String.valueOf(estoquePao));
            Escritor.newLine();
            //diminui o queijo
            estoqueQueijo = estoqueQueijo - hamburguer;
            Escritor.write(String.valueOf(estoqueQueijo));
            Escritor.newLine();
            //diminui o refri
            estoqueRefri = estoqueRefri - refri;
            Escritor.write(String.valueOf(estoqueRefri));
            Escritor.newLine();

            Escritor.close();
            ArquivoDeEscrita.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        //variaveis recebem zero para as novas compras dos clientes
        batatas = 0;
        hamburguer = 0;
        refri = 0;
        //zera onde o cliente muda a quantidade
        spBatata.setValue(0);
        spHam.setValue(0);
        spRefri.setValue(0);
        tfPedido.setText(" ");
        painelClienteCerto.setText(" ");
    }//GEN-LAST:event_btConfClieActionPerformed

    private void btAddCarneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddCarneActionPerformed
        //bt adiciona a quantidade de carne 
        quantidadeCarne++;
        comprasEstoque();
    }//GEN-LAST:event_btAddCarneActionPerformed

    private void btAddRefriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddRefriActionPerformed
        //bt adiciona a quantidade de refri
        quantidadeRefri++;
        comprasEstoque();
    }//GEN-LAST:event_btAddRefriActionPerformed

    private void btAddBatataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddBatataActionPerformed
        //bt adiciona a quantidade de batatas
        quantidadeBatata++;
        comprasEstoque();
    }//GEN-LAST:event_btAddBatataActionPerformed

    private void btConfEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfEstoqueActionPerformed
        //quando é feita a compra vai para o arquivo txt
        try {
            FileWriter ArquivoDeEscrita;
            ArquivoDeEscrita = new FileWriter(arquivo);
            BufferedWriter Escritor = new BufferedWriter(ArquivoDeEscrita);
            //se a quantidade da compra é maior que zero
            // entao é somado aos estoques
            if (quantidadeBatata >= 0) {
                estoqueBatata = estoqueBatata + quantidadeBatata;
                Escritor.write(String.valueOf(estoqueBatata));
                Escritor.newLine();
            }
            if (quantidadeCarne >= 0) {
                estoqueCarne = estoqueCarne + quantidadeCarne;
                Escritor.write(String.valueOf(estoqueCarne));
                Escritor.newLine();
            }
            if (quantidadePao >= 0) {
                estoquePao = estoquePao + quantidadePao;
                Escritor.write(String.valueOf(estoquePao));
                Escritor.newLine();
            }
            if (quantidadeQueijo >= 0) {
                estoqueQueijo = estoqueQueijo + quantidadeQueijo;
                Escritor.write(String.valueOf(estoqueQueijo));
                Escritor.newLine();
            }
            if (quantidadeRefri >= 0) {
                estoqueRefri = estoqueRefri + quantidadeRefri;
                Escritor.write(String.valueOf(estoqueRefri));
                Escritor.newLine();
            }
            Escritor.close();
            ArquivoDeEscrita.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        //quantidades recebem zero para uma nova compra
        quantidadeBatata = 0;
        quantidadeCarne = 0;
        quantidadePao = 0;
        quantidadeQueijo = 0;
        quantidadeRefri = 0;

        //soma das compras do mes são adicionados no arquivo txt
        try {
            FileWriter ArquivoDeEscrita;
            ArquivoDeEscrita = new FileWriter(arquivo3, true);
            BufferedWriter Escritor = new BufferedWriter(ArquivoDeEscrita);

            Escritor.write(String.valueOf(somaCompras));
            Escritor.newLine();

            Escritor.close();
            ArquivoDeEscrita.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        //soma recebe zero para novas compras
        somaCompras = 0;
        tfTotalCompra.setText(" ");
        painelAddprod.setText(" ");
    }//GEN-LAST:event_btConfEstoqueActionPerformed

    private void btCancEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancEstoqueActionPerformed
        quantidadeBatata = 0;
        quantidadeCarne = 0;
        quantidadePao = 0;
        quantidadeQueijo = 0;
        quantidadeRefri = 0;

        tfTotalCompra.setText(" ");
        painelAddprod.setText(" ");
    }//GEN-LAST:event_btCancEstoqueActionPerformed

    private void btFinalDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalDiaActionPerformed
        painelResumoDia.setText(" ");
        painelResumoDia.append(" ");
        int contVendas = 0;
        //soma o numero de vendas diarias 
        for (int i = 0; i < vendasDiarias.size(); i++) {
            contVendas++;
        }
        //mostra quantas vendas diarias foram feitas
        painelResumoDia.append("No dia somaram " + contVendas + " vendas:\n");
        painelResumoDia.append("-------------------------------------------\n ");
        //mostra cada uma das vendas e seus valores
        for (int i = 0; i < vendasDiarias.size(); i++) {
            painelResumoDia.append("Venda " + (i + 1) + ": R$" + vendasDiarias.get(i) + '\n');
            //soma cada uma das venda para que tenha o valor total das vendas diarias
            somaVendasDiarias = somaVendasDiarias + vendasDiarias.get(i);
        }
        painelResumoDia.append("-------------------------------------------\n ");
        //mostra a soma das vendas diarias 
        painelResumoDia.append("Soma das vendas diaria: R$" + somaVendasDiarias);

        try {
            FileWriter ArquivoDeEscrita;
            ArquivoDeEscrita = new FileWriter(arquivo2, true);
            BufferedWriter Escritor = new BufferedWriter(ArquivoDeEscrita);
            //soma das vendas diarias é inserido no txt
            Escritor.write(String.valueOf(somaVendasDiarias));
            Escritor.newLine();

            Escritor.close();
            ArquivoDeEscrita.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        somaVendasDiarias = 0;
        //limpa para adicionar as vendas do novo dia
        vendasDiarias.clear();
    }//GEN-LAST:event_btFinalDiaActionPerformed

    private void btFinalMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalMesActionPerformed
        painelResumoMes.setText(" ");
        painelResumoMes.append(" ");
        int contVendas = 0, contCompras = 0;
        double comprasMes = 0, somaVendasMes = 0;
        //adiciona as vendas diarias do arquivo txt
        //no array vendasMes para depois mostrar
        try {
            FileReader ArquivoDeLeitura = new FileReader(arquivo2);
            BufferedReader Leitor = new BufferedReader(ArquivoDeLeitura);

            while (Leitor.ready()) {
                vendasMes.add(Double.parseDouble(Leitor.readLine()));
            }
            Leitor.close();
            ArquivoDeLeitura.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        //adiciona as compras do mes no array para depois mostrar
        try {
            FileReader ArquivoDeLeitura = new FileReader(arquivo3);
            BufferedReader Leitor = new BufferedReader(ArquivoDeLeitura);

            while (Leitor.ready()) {
                compras.add(Double.parseDouble(Leitor.readLine()));
            }
            Leitor.close();
            ArquivoDeLeitura.close();
        } catch (IOException ex) {
            Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
        }
        //percorre o array para mostrar quantas vendas tiveram no mes
        for (int i = 0; i < vendasMes.size(); i++) {
            contVendas++;
        }
        painelResumoMes.append(" -> No mês somaram " + contVendas + " dias com vendas:\n");
        painelResumoMes.append("-------------------------------------------\n");
        for (int i = 0; i < vendasMes.size(); i++) {
            painelResumoMes.append("Dia " + (i + 1) + " foram vendidos: R$" + vendasMes.get(i) + '\n');
            somaVendasMes = somaVendasMes + vendasMes.get(i);
        }
        //mostra todas as compras do mes
        for (int i = 0; i < compras.size(); i++) {
            contCompras++;
        }
        painelResumoMes.append("\n ->  No mês somaram " + contCompras + " compras no mês:\n");
        painelResumoMes.append("-------------------------------------------\n");
        for (int i = 0; i < compras.size(); i++) {
            painelResumoMes.append("Compra " + (i + 1) + " foi gasto: R$" + compras.get(i) + '\n');
            comprasMes = comprasMes + compras.get(i);
        }

        painelResumoMes.append("-------------------------------------------\n");
        painelResumoMes.append("--> Soma das vendas mensal: R$" + somaVendasMes + '\n');
        painelResumoMes.append("--> Gastos com compras para o mês: R$" + comprasMes + '\n');
        //faz o calculo dos lucros ou do prejuizo e mostra
        double lucroMes = (somaVendasMes - comprasMes);
        
        if (lucroMes > 0) {
            painelResumoMes.append("********** O lucro do mês foi: R$" + lucroMes + " **********");
        } else {
            painelResumoMes.append("********** O prejuizo do mês foi: R$" + lucroMes + " **********");
        }
        somaVendasDiarias = 0;
        
        vendasMes.clear();
        compras.clear();
    }//GEN-LAST:event_btFinalMesActionPerformed

    private void btAddPaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddPaoActionPerformed
        //bt adiciona a quantidade de pao
        quantidadePao++;
        comprasEstoque();
    }//GEN-LAST:event_btAddPaoActionPerformed

    private void spRefriStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spRefriStateChanged
        //se há refri no estoque 
        if (estoqueRefri > 0) {
            if (refri < estoqueRefri) {
                refri = (int) spRefri.getValue();
                calculaProdutos();
            }
        } else {
            painelClienteCerto.append("\nDesculpe! Não há refrigerante.");
        }
    }//GEN-LAST:event_spRefriStateChanged

    private void spHamStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spHamStateChanged
        //se tem todos os produtos para o hamburguer
        if (estoqueCarne > 0 && estoqueQueijo > 0 && estoquePao > 0) {

            if (hamburguer < estoqueCarne && hamburguer < estoquePao && hamburguer < estoqueQueijo) {

                hamburguer = (int) spHam.getValue();
                calculaProdutos();
            }
        } else {
            painelClienteCerto.append("\nDesculpe! Não há todos os ingredientes do hamburguer.");
        }
    }//GEN-LAST:event_spHamStateChanged

    private void spBatataStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spBatataStateChanged
        //se há batatas em estoque
        if (estoqueBatata > 0) {
            if (batatas < estoqueBatata) {
                batatas = (int) spBatata.getValue();
                calculaProdutos();
            }
        } else {
            painelClienteCerto.append("\nDesculpe! Não há batatas.");
        }

    }//GEN-LAST:event_spBatataStateChanged

    private void btCancClienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancClienActionPerformed
        spBatata.setValue(0);
        spHam.setValue(0);
        spRefri.setValue(0);
        tfPedido.setText(" ");
        painelClienteCerto.setText(" ");
    }//GEN-LAST:event_btCancClienActionPerformed

    private void btAddQueijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddQueijoActionPerformed
        quantidadeQueijo++;
        comprasEstoque();
    }//GEN-LAST:event_btAddQueijoActionPerformed

    private void btDimPaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDimPaoActionPerformed
        quantidadePao--;
        comprasEstoque();
    }//GEN-LAST:event_btDimPaoActionPerformed

    private void btDimCarneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDimCarneActionPerformed
        quantidadeCarne--;
        comprasEstoque();
    }//GEN-LAST:event_btDimCarneActionPerformed

    private void btDimQueijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDimQueijoActionPerformed
        quantidadeQueijo--;
        comprasEstoque();
    }//GEN-LAST:event_btDimQueijoActionPerformed

    private void btDimRefriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDimRefriActionPerformed
        quantidadeRefri--;
        comprasEstoque();
    }//GEN-LAST:event_btDimRefriActionPerformed

    private void btDimBatatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDimBatatActionPerformed
        quantidadeBatata--;
        comprasEstoque();
    }//GEN-LAST:event_btDimBatatActionPerformed

    private void btVerEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerEstoqueActionPerformed
        //adiciona no txt
        if (arquivo.exists()) {
     
            try {
                FileReader ArquivoDeLeitura = new FileReader(arquivo);
                BufferedReader Leitor = new BufferedReader(ArquivoDeLeitura);
                int cont = 0;
                String linha[] = new String[5];

                while (Leitor.ready()) {
                    linha[cont] = Leitor.readLine();
                    cont++;
                }

                Leitor.close();
                ArquivoDeLeitura.close();
                //cada variavel recebe do seu estoque 
                for (int i = 0; i < 5; i++) {
                    estoqueBatata = Integer.parseInt(linha[0]);
                    estoqueCarne = Integer.parseInt(linha[1]);
                    estoquePao = Integer.parseInt(linha[2]);
                    estoqueQueijo = Integer.parseInt(linha[3]);
                    estoqueRefri = Integer.parseInt(linha[4]);
                }

            } catch (IOException ex) {
                Logger.getLogger(FastFood.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há nada em estoque!");
        }
        painelEstoque.setText(" ");
        painelEstoque.append("     Os produtos do estoque são:\n\n");
        painelEstoque.append(" Pão: " + estoquePao + '\n');
        painelEstoque.append(" Blend de Carne: " + estoqueCarne + '\n');
        painelEstoque.append(" Queijo: " + estoqueQueijo + '\n');
        painelEstoque.append(" Refrigerante: " + estoqueRefri + '\n');
        painelEstoque.append(" Batatas: " + estoqueBatata + '\n');
    }//GEN-LAST:event_btVerEstoqueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FastFood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddBatata;
    private javax.swing.JButton btAddCarne;
    private javax.swing.JButton btAddPao;
    private javax.swing.JButton btAddQueijo;
    private javax.swing.JButton btAddRefri;
    private javax.swing.JButton btCancClien;
    private javax.swing.JButton btCancEstoque;
    private javax.swing.JButton btConfClie;
    private javax.swing.JButton btConfEstoque;
    private javax.swing.JButton btDimBatat;
    private javax.swing.JButton btDimCarne;
    private javax.swing.JButton btDimPao;
    private javax.swing.JButton btDimQueijo;
    private javax.swing.JButton btDimRefri;
    private javax.swing.JButton btFinalDia;
    private javax.swing.JButton btFinalMes;
    private javax.swing.JButton btVerEstoque;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea painelAddprod;
    private javax.swing.JScrollPane painelCliente;
    private javax.swing.JTextArea painelClienteCerto;
    private javax.swing.JTextArea painelEstoque;
    private javax.swing.JTextArea painelResumoDia;
    private javax.swing.JTextArea painelResumoMes;
    private javax.swing.JScrollPane painelresumoDia;
    private javax.swing.JSpinner spBatata;
    private javax.swing.JSpinner spHam;
    private javax.swing.JSpinner spRefri;
    private javax.swing.JTextField tfPedido;
    private javax.swing.JTextField tfTotalCompra;
    // End of variables declaration//GEN-END:variables
}
